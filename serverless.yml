service: lambda-autenticacao-pos

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs16.x

# you can overwrite defaults here
  stage: dev
  # environment:
  #   AWS_KEY: ${env:AWS_ACCESS_KEY_ID}
  #   AWS_SECRET: ${env:AWS_SECRET_ACCESS_KEY}
  #   AWS_REGION_KEY:  ${env:AWS_REGION_KEY}
  #   COGNITO_CLIENT_ID_KEY: ${env:COGNITO_CLIENT_ID_KEY}
    
package:
  individually: true  # Define package.individually como true a nível de serviço
  patterns:
    - '!node_modules/**'  # Padrões de pacote a nível de serviço que se aplicam a todas as funções

functions:
  generatepayment:
    handler: src/handler.generatepayment
    role: arn:aws:iam::590183845614:role/LabRole
    events:
      - httpApi:
          path: /generatePayment
          method: post
          payload:
            contentHandling: CONVERT_TO_TEXT # Esta opção é importante para garantir que o corpo da solicitação seja enviado como texto
  searchPaymentByOrderId:
    handler: src/handler.searchPaymentByOrderId
    role: arn:aws:iam::590183845614:role/LabRole
    events:
      - httpApi:
          path: /searchPaymentByOrderId/{orderId}
          method: get
          payload:
            contentHandling: CONVERT_TO_TEXT # Esta opção é importante para garantir que o corpo da solicitação seja enviado como texto
  payOrderId:
    handler: src/handler.payOrderId
    role: arn:aws:iam::590183845614:role/LabRole
    events:
      - httpApi:
          path: /payOrderId/{orderId}
          method: put
          payload:
            contentHandling: CONVERT_TO_TEXT # Esta opção é importante para garantir que o corpo da solicitação seja enviado como texto
            
plugins:
  - serverless-offline
  - serverless-plugin-typescript
  
